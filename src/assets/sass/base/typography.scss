:root {
  --font-primary: "Syne";
  --font-secondary: "Poppins";
}

.xxxl {
  margin-bottom: .5em;
  font-size: 56px;
  font-weight: 500;
  line-height: 1.22;
  letter-spacing: 1px;
  color: var(--color-heading)
}

.xxl {
  margin-bottom: .5em;
  font-size: 37px;
  font-weight: 500;
  line-height: 1.22;
  letter-spacing: 1px;
  color: var(--color-heading)
}

.xl {
  margin-bottom: .5em;
  font-size: 37px;
  font-weight: 500;
  line-height: 1.22;
  letter-spacing: 1px;
  color: var(--color-heading)
}

h1, .h1 {
    margin-bottom: .5em;
    font-size: 32px;
    font-weight: 500;
    line-height: 1.22;
    color: var(--color-heading)
  }
  
h2, .h2 {
  margin-bottom: .8em;
  font-size: 27px;
  font-weight: 500;
  line-height: 1.3;
  color: var(--color-heading)
}

h3, .h3 {
  margin-bottom: .8em;
  font-size: 24px;
  font-weight: 500;
  line-height: 1.4;
  color: var(--color-heading)
}

h4, .h4 {
margin-bottom: 1em;
font-size: 21px;
font-weight: 500;
line-height: 1.4;
color: var(--color-heading)
}

h5, .h5 {
  margin-bottom: 1em;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.4;
  color: var(--color-heading)
}

p, .paragraph, ol li {
  margin-bottom: 2em;
  font-family: var(--font-secondary);
  font-size: 16px;
  font-weight: 300;
  line-height: 1.8;
  color: var(--color-text)
}

blockquote {
  margin-left: 0;
  padding-left: 2em;
  border-left: 3px solid var(--color-accent-1)
}

small, .small {
  font-size: 12px;
  line-height: 1.8
}

.subheading {
  margin-bottom: 1em;
  font-size: 16px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px
}

strong,
blockquote p {
  font-weight: 400;
  color: var(--color-dark-2)
}

.capitalize {
  text-transform: capitalize
}

.capitalize-f .char:first-child {
  text-transform: capitalize
}

.uppercase {
  text-transform: uppercase
}

.text-center {
  text-align: center
}

.text-end {
  text-align: end
}

.color-heading {
  color: #fff
}

.color-text {
  color: #ddd
}

.line-clamp-2,
.line-clamp-3 {
  display: -webkit-box;
  -webkit-box-orient: vertical;  
  overflow: hidden
}

.line-clamp-2 {
  -webkit-line-clamp: 2
}

.line-clamp-3 {
    -webkit-line-clamp: 3
}

@media(min-width:767px) {
  .xxxl {
    font-size: 68px
  }
  .xxl {
    font-size: 57px
  }
  .xl {
    font-size: 47px
  }
  h1, .h1 {
      font-size: 40px
  }
  h2, .h2 {
    font-size: 33px;
    font-weight: 300
  }
  h3, .h3 {
    font-size: 27px
  }
  h4, .h4 {
    font-size: 23px
  }
  h5, .h5 {
    font-size: 19px
  }
  p, .paragraph {
    font-size: 17px
  }
  blockquote {
    padding-left: 1.8em
  }
  .text-md-end {
    text-align: end
  }
}

@media(min-width:1200px) {
  .xxxl {
    font-size: 88px
  }
  .xxl {
    font-size: 76px
  }
  .xl {
    font-size: 66px
  }
  h1, .h1 {
      font-size: 58px
    }
  h2, .h2 {
    font-size: 46px
  }
  h3, .h3 {
    font-size: 37px
  } 
  h4, .h4 {
  font-size: 28px
  }
  h5, .h5 {
  font-size: 22px
  }
}

@media(min-width:1400px) {
  .xxxl {
    font-size: 108px
  }
  .xxl {
    font-size: 85px
  }
  .xl {
    font-size: 68px
  }
  h1, .h1 {
      font-size: 55px
    }
  h2, .h2 {
    font-size: 44px
  }
  h3, .h3 {
    font-size: 35px
  } 
  h4, .h4 {
  font-size: 28px
  }
  h5, .h5 {
  font-size: 22px
  }
}


  .splitting .word,
  .splitting .char {
    display: inline-block;
    margin-top: -10px;
    margin-bottom: -10px
  }
  
  .splitting .char {
    position: relative
  }
  /**
   * Populate the psuedo elements with the character to allow for expanded effects
   * Set to `display: none` by default; just add `display: block` when you want
   * to use the psuedo elements
   */
  .splitting .char::before,
  .splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    user-select: none
  }
  
  .splitting {
    --word-center: calc((var(--word-total) - 1) / 2);
    --char-center: calc((var(--char-total) - 1) / 2);
    --line-center: calc((var(--line-total) - 1) / 2)
  }
  
  .splitting .word {
    --word-percent: calc(var(--word-index) / var(--word-total));
    --line-percent: calc(var(--line-index) / var(--line-total));
    overflow: hidden
  }
  
  .splitting .char {
    --char-percent: calc(var(--char-index) / var(--char-total));
    --char-offset: calc(var(--char-index) - var(--char-center));
    --distance: calc(
       (var(--char-offset) * var(--char-offset)) / var(--char-center)
    )
    --distance-sine: calc(var(--char-offset) / var(--char-center));
    --distance-percent: calc((var(--distance) / var(--char-center)))
  }
  
